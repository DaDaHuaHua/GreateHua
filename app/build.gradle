apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
//apply plugin: 'android-apt'
apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion 25
    defaultConfig {
        applicationId "default_application_id"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
// 设置支持的SO库架构
            abiFilters 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }

    }
    signingConfigs {
        alpha {
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
            storeFile file("${project.rootDir}/greatehua.keystore")
            storePassword STORE_PASSWORD
        }
    }
    buildTypes {
        alpha {
            applicationIdSuffix ".alpha"
            buildConfigField("String", "BUGLY_APP_ID", "\"233b57817c\"")
        }
        beta {
            applicationIdSuffix ".beta"
            buildConfigField("String", "BUGLY_APP_ID", "\"ef66b1891d\"")
        }
        exp {
            applicationIdSuffix ".exp"
        }
        pro {
            applicationIdSuffix ".pro"
        }
        rc {
            applicationIdSuffix ".rc"
        }
    }

    flavorDimensions 'default'
    productFlavors {
        google {
            applicationId 'com.song.google'
            dimension "default"
        }
        xiaomi {
            applicationId 'com.song.xiaomi'
            dimension "default"
        }
        free {
            applicationId 'com.song.free'
            dimension "default"
        }
        paid {
            applicationId 'com.song.paid'
            dimension "default"
        }
    }
    variantFilter {
        variant ->
//            println "variant name is ${name}"
//            if(name.contains('xiaomiExp')){
//                setIg nore(false)
//            }else{
//                setIgnore(true)
//            }

//            variant.flavors.each {
//                if ((it.name.contains('xiaomi')|| it.name.contains('google')) && (buildType.name.contains("exp") || buildType.name.contains('beta'))) {
//                    setIgnore(false)
//                } else {
//                    setIgnore(true)
//                }
//            }

    }
    buildTypes.all { type ->
        type.signingConfig signingConfigs.alpha
        type.debuggable = true
    }
    buildTypes.all { type ->
        def typeName = name;
        if (typeName.contains("debug")) {
            typeName = typeName.replace("debug", "alpha")
        }
        if (typeName.contains("release")) {
            typeName = typeName.replace("release", "rc")
        }
        Properties resConfig = new Properties();
        resConfig.load(new FileInputStream("${rootDir}/config/third/" + typeName + ".properties"));
        resValue("string", "sofix_app_id", resConfig.sophix_app_id);
        resValue("string", "sophix_app_secret", resConfig.sophix_app_secret);
        resValue("string", "sophix_rsa", resConfig.sophix_rsa);
    }
    sourceSets {
        main {
            res.srcDirs = [
                    'src/main/res/layout/app',
                    'src/main/res/layout/homework',
                    'src/main/res/layout/demo',
                    'src/main/res/layout/video_player',
                    'src/main/res/layout/kotlin',
                    'src/main/res/layout',
                    'src/main/res'
            ]
        }
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.1'
    }


}
//kotlin协程
ext {
    anko_version = "0.10.1"
}
configurations{
    xiaomiExpCompile{}
}
dependencies {

    //========================自动生成的============================================================
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    //==============================================================================================

    //commonlib
    compile project(':commonlib')

    //commonwidget
    compile project(':commonwidget')

    //kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    compile 'com.android.support:appcompat-v7:25.3.1'

    //butterknife

    //java ButterKnife注解处理器
    compile 'com.jakewharton:butterknife:8.7.0'

    // annotationProcessor 'com.jakewharton:butterknife-compiler:8.7.0'

    //kotlin ButterKnife注解处理器
    kapt 'com.jakewharton:butterknife-compiler:8.7.0'

    //bugly
    compile 'com.tencent.bugly:crashreport:2.5.0'
    compile 'com.tencent.bugly:nativecrashreport:3.1.2'

    //七牛播放器相关
    compile 'com.qiniu.pili:pili-android-qos:0.8.+'

    //facebook--Rebound
    compile 'com.facebook.rebound:rebound:0.3.8'

    //bottom-navigation-bar
    compile 'com.ashokvarma.android:bottom-navigation-bar:1.4.1'

    //supportDesign
    compile 'com.android.support:design:25.3.1'

    //glide
    compile 'com.github.bumptech.glide:glide:3.7.0'

    //gson其实可以不要的，已经有fastJson
    compile 'com.google.code.gson:gson:2.7'

    //constraintLayout
    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    //kotlin协程
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.16'

    //kotlin anko库
    compile "org.jetbrains.anko:anko:$anko_version"

    //kotlin Layout RecyclerView
    compile "org.jetbrains.anko:anko-recyclerview-v7:$anko_version"
    compile "org.jetbrains.anko:anko-recyclerview-v7-coroutines:$anko_version"
    testCompile 'junit:junit:4.12'

    //sophix
    compile 'com.aliyun.ams:alicloud-android-hotfix:3.1.6'

    //数据库框架
    compile "io.objectbox:objectbox-android-objectbrowser:$objectboxVersion"

    //    releaseCompile "io.objectbox:objectbox-android:$objectboxVersion"

    //stetho
    compile 'com.facebook.stetho:stetho:1.5.0'
}
repositories {
    mavenCentral()
    maven {
        url "http://maven.aliyun.com/nexus/content/repositories/releases"
    }
}



apply plugin: Plugin1
android2{
    test()
    test('this is test')
    compileSdkVersion 25
    buildToolsVersion '25.0.3'
    defaultConfig{
        applicationId 'com.songhua.test'
        minSdkVersion 23
        targetSdkVersion 1
        versionCode 1
        versionName '1.0'
    }
}
apply plugin:'io.objectbox'